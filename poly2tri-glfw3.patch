--- poly2tri-26242d0aa7b8/testbed/main.cc.orig	2012-04-04 02:05:50.000000000 +0200
+++ poly2tri-26242d0aa7b8/testbed/main.cc	2015-07-04 18:11:18.741031421 +0200
@@ -29,7 +29,7 @@
  * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 #include <cstdlib>
-#include <GL/glfw.h>
+#include <GLFW/glfw3.h>
 #include <time.h>
 #include <fstream>
 #include <string>
--- poly2tri-26242d0aa7b8/testbed/main.cc.orig	2015-07-04 18:12:17.604362282 +0200
+++ poly2tri-26242d0aa7b8/testbed/main.cc	2015-07-04 19:18:06.324196570 +0200
@@ -76,6 +76,7 @@
 bool draw_map = false;
 /// Create a random distribution of points?
 bool random_distribution = false;
+GLFWwindow *window = NULL;
 
 template <class C> void FreeClear( C & cntr ) {
     for ( typename C::iterator it = cntr.begin(); 
@@ -229,11 +230,10 @@
 
   if (glfwInit() != GL_TRUE)
     ShutDown(1);
-  // 800 x 600, 16 bit color, no depth, alpha or stencil buffers, windowed
-  if (glfwOpenWindow(window_width, window_height, 5, 6, 5, 0, 0, 0, GLFW_WINDOW) != GL_TRUE)
+  window = glfwCreateWindow(window_width, window_height, "Poly2Tri - C++", NULL, NULL);
+  if (window == NULL)
     ShutDown(1);
 
-  glfwSetWindowTitle("Poly2Tri - C++");
   glfwSwapInterval(1);
 
   glEnable(GL_BLEND);
@@ -263,11 +263,11 @@
 
     // escape to quit, arrow keys to rotate view
     // Check if ESC key was pressed or window was closed
-    running = !glfwGetKey(GLFW_KEY_ESC) && glfwGetWindowParam(GLFW_OPENED);
+    running = !glfwGetKey(window, GLFW_KEY_ESCAPE) && !glfwWindowShouldClose(window);
 
-    if (glfwGetKey(GLFW_KEY_LEFT) == GLFW_PRESS)
+    if (glfwGetKey(window, GLFW_KEY_LEFT) == GLFW_PRESS)
       rotate_y += delta_rotate;
-    if (glfwGetKey(GLFW_KEY_RIGHT) == GLFW_PRESS)
+    if (glfwGetKey(window, GLFW_KEY_RIGHT) == GLFW_PRESS)
       rotate_y -= delta_rotate;
     // z axis always rotates
     rotate_z += delta_rotate;
@@ -280,7 +280,7 @@
     }
 
     // swap back and front buffers
-    glfwSwapBuffers();
+    glfwSwapBuffers(window);
   }
 }
 
